 LJMP START
 ORG 100H

START:
 MOV A, #0H
 MOV R0, #0H
 MOV R1, #0H
 MOV R2, #0H
 LCALL LCD_CLR
 LCALL WAIT_KEY
 MOV R1, A
 LCALL BCD1
 LCALL WRITE_HEX
 LCALL WAIT_KEY
 SJMP ADDING
 
 SJMP START

ADDING:
 CJNE A, #0AH, SUBS
 MOV A, #'+'
 LCALL WRITE_DATA
 LCALL WAIT_KEY
 MOV R2, A
 LCALL BCD2
 LCALL WRITE_HEX
 MOV A, #'='
 LCALL WRITE_DATA
 MOV A, R2
 ADD A, R1
 MOV R1, A
 LCALL BCD1
 LCALL WRITE_HEX
 LCALL WAIT_ENTER
 RET

SUBS:
 CJNE A, #0BH, MULT
 MOV A, #'-'
 LCALL WRITE_DATA
 LCALL WAIT_KEY
 MOV R2, A
 LCALL BCD2
 LCALL WRITE_HEX
 MOV A, #'='
 LCALL WRITE_DATA
 MOV A, R1
 CLR C
 SUBB A, R2
 MOV R1, A
 JNC SUBS_P
 MOV A, #'-'
 LCALL WRITE_DATA
 MOV A, R1
 CPL A
 INC A
 LCALL WRITE_HEX
 LCALL WAIT_ENTER
 RET

SUBS_P:
 MOV A, R1
 MOV R1, A
 LCALL BCD1
 LCALL WRITE_HEX
 LCALL WAIT_ENTER
 RET

MULT:
 CJNE A, #0CH, DIVI
 MOV A, #'*'
 LCALL WRITE_DATA
 LCALL WAIT_KEY
 MOV R2, A
 LCALL BCD2
 LCALL WRITE_HEX
 MOV A, #'='
 LCALL WRITE_DATA
 MOV A, R1
 MOV B, R2
 MUL AB
 MOV R1, A
 LCALL BCD101
 LCALL BCD1
 LCALL WRITE_HEX
 LCALL WAIT_ENTER
 RET
 
DIVI:
 CJNE A, #0DH, ERR
 MOV A, #'/'
 LCALL WRITE_DATA
 LCALL WAIT_KEY
 MOV R2, A
 JNZ DIVI_N0
 SJMP ERR
 RET

DIVI_N0:
 LCALL BCD2
 LCALL WRITE_HEX
 MOV A, #'='
 LCALL WRITE_DATA
 MOV A, R1
 MOV B, R2
 DIV AB
 MOV R1, A
 MOV R2, B
 LCALL BCD1
 LCALL WRITE_HEX
 MOV A, #'R'
 LCALL WRITE_DATA
 LCALL BCD2
 LCALL WRITE_HEX
 LCALL WAIT_ENTER
 RET

BCD1:
 MOV A, R1
 MOV B, #10
 DIV AB
 SWAP A
 ADD A, B
 RET
 
BCD2:
 MOV A, R2
 MOV B, #10
 DIV AB
 SWAP A
 ADD A, B
 RET
 
BCD101:
 MOV A, R1
 MOV B, #100
 DIV AB
 JNZ PRINT100
 RET

BCD102:
 MOV A, R2
 MOV B, #100
 DIV AB
 JNZ PRINT100
 RET

PRINT100:
 LCALL WRITE_HEX
 MOV A, R1
 SUBB A, #10
 MOV R1, A
 RET

ERR:
 MOV A, #'E'
 LCALL WRITE_DATA
 MOV A, #'R'
 LCALL WRITE_DATA
 MOV A, #'R'
 LCALL WRITE_DATA
 MOV A, #'O'
 LCALL WRITE_DATA
 MOV A, #'R'
 LCALL WRITE_DATA
 LCALL WAIT_ENTER
 
 NOP
